; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\FILE.C"
	.assume ADL=1
	SEGMENT CODE
_fsize:
	LD	HL,-3
	CALL	__frameset
	LD	BC,2
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_fseek
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_ftell
	POP	BC
	LD	(IX+-3),HL
	LD	IY,(IX+6)
	LD	C,(IY+0)
	LD	B,0
	PUSH	BC
	CALL	_ti_Rewind
	POP	BC
	LD	HL,(IX+-3)
;    1	#include <stdio.h>
;    2	#include "file.h"
;    3	
;    4	void save_data(const char* path, void* data, size_t szData, const char* mode) {
;    5	    FILE* hFile;
;    6	    // open file with whatever is requested
;    7	    hFile = fopen(path, mode);
;    8	
;    9	    // NO MEMORY SAFETY, need to check for null pointers
;   10	    if (!hFile) {
;   11	        os_PutStrFull("ERROR: FAILED TO OPEN FILE");
;   12	        exit(-1);
;   13	    }
;   14	
;   15	    fwrite(data, szData, 1, hFile);
;   16	
;   17	    fclose(hFile);
;   18	
;   19	}
;   20	
	LD	SP,IX
	POP	IX
	RET	


;**************************** _fsize ***************************
;Name                         Addr/Register   Size   Type
;_ti_Rewind                          IMPORT  -----   function
;_ftell                              IMPORT  -----   function
;_fseek                              IMPORT  -----   function
;sz                                    IX-3      3   variable
;hFile                                 IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


_save_data:
	LD	HL,-3
	CALL	__frameset
	LD	BC,(IX+15)
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_fopen
	POP	BC
	POP	BC
	LD	(IX+-3),HL
	CALL	__icmpzero
	JR	NZ,L_2
	LD	BC,L__2
	PUSH	BC
	CALL	_os_PutStrFull
	POP	BC
	LD	BC,16777215
	PUSH	BC
	CALL	_exit
	POP	BC
L_2:
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+12)
	PUSH	BC
	LD	BC,(IX+9)
	PUSH	BC
	CALL	_fwrite
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_fclose
	POP	BC
	LD	SP,IX
	POP	IX
	RET	


;**************************** _save_data ***************************
;Name                         Addr/Register   Size   Type
;_fclose                             IMPORT  -----   function
;_fwrite                             IMPORT  -----   function
;_exit                               IMPORT  -----   function
;_os_PutStrFull                      IMPORT  -----   function
;_fopen                              IMPORT  -----   function
;hFile                                 IX-3      3   variable
;mode                                 IX+15      3   parameter
;szData                               IX+12      3   parameter
;data                                  IX+9      3   parameter
;path                                  IX+6      3   parameter


; Stack Frame Size: 21 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__2:
	DB	"ERROR: FAILED TO OPEN FILE"
	DB	0
	SEGMENT CODE
;   21	void read_data(void* buf, const char* path, size_t sz) {
_read_data:
	LD	HL,-3
	CALL	__frameset
;   22	    FILE* hFile = fopen(path, "r");
	LD	BC,L__4
	PUSH	BC
	LD	BC,(IX+9)
	PUSH	BC
	CALL	_fopen
	POP	BC
	POP	BC
	LD	(IX+-3),HL
;   23	
;   24	    // if size is 0, then read the whole file
;   25	    if (!sz) {
	LD	HL,(IX+12)
	CALL	__icmpzero
	JR	NZ,L_5
;   26	        sz = fsize(hFile);
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_fsize
	POP	BC
	LD	(IX+12),HL
;   27	    }
L_5:
;   28	
;   29	    fread(buf, sz, 1, hFile);
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+12)
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_fread
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   30	
;   31	    fclose(hFile);
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_fclose
	POP	BC
;   32	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _read_data ***************************
;Name                         Addr/Register   Size   Type
;_fclose                             IMPORT  -----   function
;_fread                              IMPORT  -----   function
;_fopen                              IMPORT  -----   function
;hFile                                 IX-3      3   variable
;sz                                   IX+12      3   parameter
;path                                  IX+9      3   parameter
;buf                                   IX+6      3   parameter


; Stack Frame Size: 18 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__4:
	DB	"r"
	DB	0
	SEGMENT CODE
;   33	
;   34	void clear_file(const char* path) {
_clear_file:
	CALL	__frameset0
;   35	    fclose(fopen(path, "w"));
	LD	BC,L__7
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_fopen
	POP	BC
	POP	BC
	PUSH	HL
	CALL	_fclose
	POP	BC
;   36	
	LD	SP,IX
	POP	IX
	RET	


;**************************** _clear_file ***************************
;Name                         Addr/Register   Size   Type
;_fopen                              IMPORT  -----   function
;_fclose                             IMPORT  -----   function
;path                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__7:
	DB	"w"
	DB	0
	XREF _fopen:ROM
	XREF _fclose:ROM
	XREF _ftell:ROM
	XREF _fseek:ROM
	XREF _fwrite:ROM
	XREF _fread:ROM
	XREF _ti_Rewind:ROM
	XREF _os_PutStrFull:ROM
	XREF _exit:ROM
	XREF __frameset0:ROM
	XREF __frameset:ROM
	XREF __icmpzero:ROM
	XDEF _clear_file
	XDEF _read_data
	XDEF _save_data
	END
